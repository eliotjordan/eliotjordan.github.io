{"version":3,"sources":["CanvasMap.js","AutoFocusControl.js","CanvasMapContainer.js","App.js","index.js"],"names":["CanvasMap","props","console","log","manifests","windows","map","useMap","useState","geojsonComponents","setGeojsonComponents","useEffect","Object","values","length","allManifests","filter","m","isFetching","json","navPlace","geojsonManifests","geojson","zoomGeoJson","windowIds","w","manifestId","includes","id","newGeojsonComponents","data","index","GeoJSON","eventHandlers","click","uri","addWindow","Tooltip","label","en","zoom","features","bboxPolygon","bbox","allBounds","featureCollection","fitBounds","fitWorld","setNeedsUpdate","TileLayer","attribution","url","AutoFocusControl","window","location","origin","className","style","backgroundColor","padding","type","onChange","event","target","checked","setZoom","preventDefault","mapDispatchToProps","addResource","connect","state","prefix","figgy","MapContainer","center","addManifest","WorkspaceArea","lazy","App","store","createStore","settings","theme","palette","dispatch","actions","this","setState","dndManager","plugins","styleClass","PluginProvider","AppProviders","fallback","Component","defaultProps","undefined","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bbe7216.chunk.js","sourcesContent":["import {TileLayer, GeoJSON, Tooltip, useMap} from 'react-leaflet';\nimport React, {useEffect, useState} from 'react';\nimport { bbox, featureCollection, bboxPolygon} from '@turf/turf';\n\nexport default function CanvasMap(props) {\n    console.log(props.manifests);\n    console.log(props.windows);\n    const map = useMap();\n    const [geojsonComponents, setGeojsonComponents] = useState([]);\n    const manifests = props.manifests;\n    const windows = props.windows;\n\n    const addNewWindow = (uri) => {\n        let manifestIds = Object.values(windows).map(w => w.manifestId);\n        if (!manifestIds.includes(uri)) {\n            props.addWindow({manifestId: uri})\n        }\n    }\n\n\n    useEffect(() => {\n        if (Object.values(manifests).length > 0) {\n            const allManifests = Object.values(manifests).filter(m => !m.isFetching).filter(m => m?.json?.navPlace);\n            let geojsonManifests = allManifests\n                .filter(m => m.json.navPlace);\n            let geojson = allManifests\n                .map(m => m.json.navPlace);\n            console.log(geojson);\n\n            // What should the map focus on?\n            let zoomGeoJson = geojson;\n            // If Mirador window(s) are open, focus on their locations\n            let windowIds = [];\n            if (Object.values(windows).length > 0) {\n                windowIds = Object.values(windows).map(w => w.manifestId);\n            }\n            if (windowIds.length > 0) {\n                let openManifests = allManifests.filter(m => windowIds.includes(m.id));\n                zoomGeoJson = openManifests\n                    .filter(m => m.json.navPlace)\n                    .map(m => m.json.navPlace);\n            }\n\n            if (geojson.length > 0) {\n                // Draw all on map\n                const newGeojsonComponents = geojson.map((data, index) =>\n                    <GeoJSON\n                        key={data.id}\n                        data={data}\n                        eventHandlers={{\n                            click: () => addNewWindow(geojsonManifests[index].id)\n                        }}\n                    >\n                        <Tooltip>{geojsonManifests[index].json.label.en}</Tooltip>\n                    </GeoJSON>);\n                console.log(newGeojsonComponents);\n\n                // Get region of interest and zoom map\n                if (props.zoom) {\n                    if (zoomGeoJson.length > 0) {\n                        const features = zoomGeoJson.map(json => bboxPolygon(bbox(json)));\n                        console.log(features);\n                        const allBounds = bbox(featureCollection(features));\n                        console.log(allBounds);\n                        map.fitBounds([[allBounds[1], allBounds[0]], [allBounds[3], allBounds[2]]]);\n                    } else {\n                        map.fitWorld();\n                    }\n                }\n\n                props.setNeedsUpdate(true);\n                setGeojsonComponents(newGeojsonComponents);\n            }\n        }\n    }, [props.manifests, props.windows]);\n\n\n   return (\n       <>\n            <TileLayer\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n           {geojsonComponents}\n       </>\n   );\n}","export default function AutoFocusControl(props) {\n    const POSITION_CLASSES = {\n        bottomleft: 'leaflet-bottom leaflet-left',\n        bottomright: 'leaflet-bottom leaflet-right',\n        topleft: 'leaflet-top leaflet-left',\n        topright: 'leaflet-top leaflet-right',\n    }\n\n    const positionClass = POSITION_CLASSES.topright;\n\n    let handleClick = (event) => {\n        console.log(event.target.checked);\n        props.setZoom(!props.zoom);\n        event.preventDefault();\n    }\n\n    const style = {\n        backgroundColor: '#FFFFFF',\n        padding: \"0.5em\"\n    }\n\n    const buttonStyle = {\n        backgroundColor: \"#00DD00\",\n        padding: \"1em\"\n    }\n\n    const addManifest = (e, uri) => {\n        e.preventDefault();\n        props.addManifest(uri);\n    }\n\n    const prefix = window.location.origin ;\n\n    return (\n        <div className={positionClass}>\n            <div className=\"leaflet-control leaflet-bar\" style={style}>\n                <input type=\"checkbox\" onChange={handleClick} checked={props.zoom} />Zoom to Items\n            </div>\n        </div>\n    );\n}","import {MapContainer} from 'react-leaflet';\nimport { connect } from 'react-redux';\nimport CanvasMap from \"./CanvasMap\";\nimport React, {useEffect, useState} from \"react\";\nimport AutoFocusControl from \"./AutoFocusControl\";\nimport {addResource} from \"mirador/dist/es/src/state/actions/catalog\";\nimport {addWindow} from \"mirador/dist/es/src/state/actions/window\";\n\nfunction CanvasMapContainer(props) {\n    const [needsUpdate, setNeedsUpdate] = useState(false);\n    const [zoom, setZoom] = useState(true);\n    const prefix = window.location.origin ;\n    const figgy = \"https://figgy.princeton.edu/manifests/\"\n\n    useEffect(() => {\n        props.addResource(prefix + \"/manifests/50aeeb68.json\");\n        props.addResource(prefix + \"/manifests/3386ca56.json\");\n        props.addResource(prefix + \"/manifests/c4edf252.json\");\n        props.addResource(prefix + \"/manifests/c9df4fd8.json\");\n        props.addResource(prefix + \"/manifests/e438a1e3.json\");\n        props.addResource(prefix + \"/manifests/fbc43e41.json\");\n        props.addResource(figgy + \"32146ff6-c93d-4b14-b198-6fb518b44042\" + \"/v3\");\n        props.addResource(figgy + \"723b0cc9-918c-42e1-80ec-d989ea011f35\" + \"/v3\");\n        props.addResource(figgy + \"310dcfd3-d44b-4979-943a-e4d748fb6d4d\" + \"/v3\");\n        props.addResource(figgy + \"a07eca8a-f425-461b-8b91-3fe75f84258f\" + \"/v3\");\n        props.addResource(figgy + \"3c76c5a1-7555-4602-aa36-1c5b0271321e\" + \"/v3\");\n        props.addResource(figgy + \"87c2f5fa-0418-446d-a152-8c6aafd16271\" + \"/v3\");\n        props.addResource(figgy + \"4bf8b692-db42-47d1-b722-cddaf88627ce\" + \"/v3\");\n        props.addResource(figgy + \"c7e11cfe-8c7d-4a65-ae39-9b769a86bf45\" + \"/v3\");\n        props.addResource(figgy + \"77dd894e-a2c6-4294-97d4-8bd275a47600\" + \"/v3\");\n        props.addResource(figgy + \"c3f5da55-5d97-4abc-b8f1-442e350a36cb\" + \"/v3\");\n    });\n\n\n    return (\n        <MapContainer center={[0, 0]} zoom={1}>\n            <CanvasMap manifests={props.manifests} windows={props.windows} addWindow={props.addWindow} setNeedsUpdate={setNeedsUpdate}\n                       zoom={zoom}/>\n            <AutoFocusControl zoom={zoom} setZoom={setZoom} addManifest={props.addResource}/>\n        </MapContainer>\n    );\n}\n\nconst mapDispatchToProps = {\n    addResource: addResource,\n    addWindow: addWindow\n};\n\nconst mapStateToProps = function(state) {\n    return {\n        manifests: state.manifests,\n        windows: state.windows\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CanvasMapContainer)\n","import React, { Component, lazy, Suspense } from 'react';\nimport { Provider } from 'react-redux'\nimport PropTypes from 'prop-types';\nimport PluginProvider from 'mirador/dist/es/src/extend/PluginProvider';\nimport AppProviders from 'mirador/dist/es/src/containers/AppProviders';\nimport createStore from 'mirador/dist/es/src/state/createStore';\nimport settings from 'mirador/dist/es/src/config/settings'\nimport * as actions from 'mirador/dist/es/src/state/actions'\nimport CanvasMapContainer from \"./CanvasMapContainer\";\n\nconst WorkspaceArea = lazy(() => import('mirador/dist/es/src/containers/WorkspaceArea'));\n\n/**\n * This is the top level Mirador component.\n * @prop {Object} manifests\n */\nexport class App extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    componentWillMount() {\n        const store = createStore()\n        settings.theme.palette.type = 'dark'\n        store.dispatch(actions.setConfig(settings))\n        store.dispatch(actions.setWorkspaceAddVisibility(true))\n        this.setState({ store: store })\n    }\n\n    /**\n     * render\n     * @return {String} - HTML markup for the component\n     */\n    render() {\n        const { dndManager, plugins } = this.props;\n        return (\n            <div>\n                <Provider store={this.state.store} styleClass=\"mirador\">\n                    <PluginProvider plugins={plugins}>\n                        <AppProviders dndManager={dndManager}>\n                            <Suspense\n                                fallback={<div />}\n                            >\n                                <WorkspaceArea />\n                            </Suspense>\n                        </AppProviders>\n                    </PluginProvider>\n                    <CanvasMapContainer />\n                </Provider>\n            </div>\n        );\n    }\n}\n\nApp.propTypes = {\n    dndManager: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n    plugins: PropTypes.array, // eslint-disable-line react/forbid-prop-types\n};\n\nApp.defaultProps = {\n    dndManager: undefined,\n    plugins: [],\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}